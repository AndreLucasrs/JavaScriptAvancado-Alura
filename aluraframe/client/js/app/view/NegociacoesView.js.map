{"version":3,"sources":["../../app-es6/view/NegociacoesView.js"],"names":["View","DateHelper","currentInstance","NegociacoesView","elemento","addEventListener","event","target","nodeName","ordena","textContent","toLowerCase","model","negociacoes","map","dataParaTexto","n","data","quantidade","valor","volume","join","volumeTotal"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,U,UAAAA,I;;AACAC,gB,sBAAAA,U;;AACAC,qB,oCAAAA,e;;;;;;;;;;;;;;;;;;;;;iCAEKC,e;;;AAEZ,iCAAYC,QAAZ,EAAqB;AAAA;;AAAA,wIAEdA,QAFc;;AAIdA,mBAASC,gBAAT,CAA0B,OAA1B,EAAkC,UAASC,KAAT,EAAe;;AAE7C,gBAAGA,MAAMC,MAAN,CAAaC,QAAb,IAAyB,IAA5B,EAAiC;;AAE7BN,gCAAkBO,MAAlB,CAAyBH,MAAMC,MAAN,CAAaG,WAAb,CAAyBC,WAAzB,EAAzB;AACH;AACJ,WAND;;AAJc;AAYpB;;;;mCAEQC,K,EAAM;AACd;AACA;AACA;AACA;AACA;AACA,waAYaA,MAAMC,WAAN,CAAkBC,GAAlB,CAAsB;AAAA,oFAIfb,WAAWc,aAAX,CAAyBC,EAAEC,IAA3B,CAJe,2CAKfD,EAAEE,UALa,2CAMfF,EAAEG,KANa,2CAOfH,EAAEI,MAPa;AAAA,aAAtB,EAUAC,IAVA,CAUK,EAVL,CAZb,sKA4BgCT,MAAMU,WA5BtC;AAiCA;;;;QAvDmCtB,I","file":"NegociacoesView.js","sourcesContent":["import {View} from './View';\r\nimport {DateHelper} from '../helpers/DateHelper';\r\nimport {currentInstance} from '../controllers/NegociacaoController';\r\n\r\nexport class NegociacoesView extends View{\r\n\r\n\tconstructor(elemento){\r\n\r\n\t\tsuper(elemento);\r\n\r\n        elemento.addEventListener('click',function(event){\r\n\r\n            if(event.target.nodeName == 'TH'){\r\n\r\n                currentInstance().ordena(event.target.textContent.toLowerCase());\r\n            }\r\n        });\r\n\r\n\t}\r\n\r\n\ttemplate(model){\r\n\t\t//usando template String\r\n\t\t//template String js, usas-se isso ` `\r\n\t\t//quando uso o join eu coloco como criterio junção uma String em branco,\r\n\t\t//ele ira varrer a lista e criar uma nova lista, mas essa nova lista so vai ter String\r\n\t\t//e no final eu dou um join, ae vai virar uma String com todos os itens do array concatenados\r\n\t\treturn `\r\n\t\t\t\t\t<table class=\"table table-hover table-bordered\">\r\n        \t\t\t\t<thead>\r\n            \t\t\t\t<tr>\r\n                \t\t\t\t<th>DATA</th>\r\n                                <th>QUANTIDADE</th>\r\n                                <th>VALOR</th>\r\n                                <th>VOLUME</th>\r\n            \t\t\t\t</tr>\r\n        \t\t\t\t</thead>\r\n\r\n        \t\t\t\t<tbody>\r\n        \t\t\t\t\t${model.negociacoes.map(n => \r\n\r\n        \t\t\t\t\t\t`\r\n        \t\t\t\t\t\t\t<tr>\r\n        \t\t\t\t\t\t\t\t<td>${DateHelper.dataParaTexto(n.data)}</td>\r\n        \t\t\t\t\t\t\t\t<td>${n.quantidade}</td>\r\n        \t\t\t\t\t\t\t\t<td>${n.valor}</td>\r\n        \t\t\t\t\t\t\t\t<td>${n.volume}</td>\r\n        \t\t\t\t\t\t\t</tr> \r\n        \t\t\t\t\t\t`\r\n        \t\t\t\t\t).join('')}\r\n        \t\t\t\t</tbody>\r\n        \r\n        \t\t\t\t<tfoot>\r\n        \t\t\t\t\t<td colspan=\"3\"></td>\r\n    \t\t\t\t\t\t<td>\r\n                                ${model.volumeTotal}\r\n                            </td>\r\n        \t\t\t\t</tfoot>\r\n    \t\t\t\t</table>\r\n\t\t\t\t`;\r\n\t}\r\n\t//quanto temos uma arrow function, quando temos uma unica instrução não precisa-se do return e nem das {}\r\n\t//esse caso esta acontecendo no .map()\r\n\t//nesse ultimo caso de expressão estamos usando o .reduce(), serve para reduzir,\r\n\t//ela processa o array e no final retorna um unico resultado\r\n\t//aquele 0.0 no final esta falando que total inicia com 0.0\r\n\r\n\t//OBS IIEF\r\n\t//Immediately-invoked function expression (IIFE) ou a função imediata\r\n\t//Vc cria a função e ja chama\r\n\t/*(function() {\r\n\r\n            let total = 0;\r\n            model.negociacoes.forEach(n => total+= n.volume);\r\n            return total;\r\n       })()*/\r\n\r\n}"]}