{"version":3,"sources":["../../app-es6/view/View.js"],"names":["View","elemento","_elemento","Error","model","innerHTML","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAAaA,I;AAEZ,kBAAYC,QAAZ,EAAqB;AAAA;;AAEpB,UAAKC,SAAL,GAAiBD,QAAjB;AACA;;;;gCAES;;AAET,YAAM,IAAIE,KAAJ,CAAU,yCAAV,CAAN;AACA;;;4BAEMC,K,EAAM;AACZ;AACA,WAAKF,SAAL,CAAeG,SAAf,GAA2B,KAAKC,QAAL,CAAcF,KAAd,CAA3B;AACA","file":"View.js","sourcesContent":["export class View{\r\n\r\n\tconstructor(elemento){\r\n\r\n\t\tthis._elemento = elemento;\r\n\t}\r\n\r\n\ttemplate(){\r\n\r\n\t\tthrow new Error(\"O método template deve ser implementado\");\r\n\t}\r\n\r\n\tupdate(model){\r\n\t\t//quando vc passa uma String para o innerHTML, ele converte para elemento do DOM\r\n\t\tthis._elemento.innerHTML = this.template(model);\r\n\t}\r\n}\r\n\r\n/*\r\n\r\nPorque usar o export\r\n\r\nA plataforma Node.js resolveu este problema adotando padrão CommonJS para criação de módulos, \r\nainda há bibliotecas como RequireJS que usam o padrão AMD \r\n(Assincronous Module Definition). \r\nContudo, o ES2015 especificou seu próprio sistema de módulos \r\nque resolve tanto o problema do escopo global quanto o de carregamento de scripts.\r\n\r\n*/"]}