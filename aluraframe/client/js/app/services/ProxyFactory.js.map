{"version":3,"sources":["../../app-es6/services/ProxyFactory.js"],"names":["ProxyFactory","objeto","props","acao","Proxy","get","target","prop","receiver","includes","_ehFuncao","console","log","Reflect","apply","arguments","set","value","func","Function"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oCAAaA,Y;;;;;;;2CAEKC,M,EAAOC,K,EAAMC,I,EAAK;;AAE5B;AACA;AACA;AACA,+BAAO,IAAIC,KAAJ,CAAUH,MAAV,EAAiB;AAKpBI,+BALoB,eAKhBC,MALgB,EAKTC,IALS,EAKJC,QALI,EAKK;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAGN,MAAMO,QAAN,CAAeF,IAAf,KAAwBP,aAAaU,SAAb,CAAuBJ,OAAOC,IAAP,CAAvB,CAA3B,EAAgE;;AAE5D,2CAAO,YAAU;;AAEbI,gDAAQC,GAAR,oBAA6BL,IAA7B;AACAM,gDAAQC,KAAR,CAAcR,OAAOC,IAAP,CAAd,EAA2BD,MAA3B,EAAkCS,SAAlC;AACA,+CAAOZ,KAAKG,MAAL,CAAP;AACH,qCALD;AAMH;;AAED,uCAAOO,QAAQR,GAAR,CAAYC,MAAZ,EAAmBC,IAAnB,EAAwBC,QAAxB,CAAP;AACH,6BA1BmB;AA4BpBQ,+BA5BoB,eA4BhBV,MA5BgB,EA4BRC,IA5BQ,EA4BFU,KA5BE,EA4BKT,QA5BL,EA4Bc;;AAE9B,oCAAGN,MAAMO,QAAN,CAAeF,IAAf,CAAH,EAAyB;AACrBD,2CAAOC,IAAP,IAAeU,KAAf;AACAd,yCAAKG,MAAL;AACH;AACD,uCAAOO,QAAQG,GAAR,CAAYV,MAAZ,EAAmBC,IAAnB,EAAwBU,KAAxB,EAA8BT,QAA9B,CAAP;AACH;AAnCmB,yBAAjB,CAAP;AAqCH;;;8CAEgBU,I,EAAK;;AAElB,+BAAO,QAAOA,IAAP,yCAAOA,IAAP,cAAuBC,QAAvB,yCAAuBA,QAAvB,EAAP;AACH","file":"ProxyFactory.js","sourcesContent":["export class ProxyFactory{\r\n\r\n    static create(objeto,props,acao){\r\n\r\n        //O proxy é um objeto que ira ser a copia de negociacao, ele irar encapsular o objeto real\r\n        //e com ele a gente pode alterar codigo de infra sem problema\r\n        //proxy se baseia em um padrão de projeto\r\n        return new Proxy(objeto,{\r\n\r\n            //O target é o objeto real, que é encapsulado pelo proxy.\r\n            //O prop é a propriedade que está sendo lida.\r\n            //O receiver é uma referência ao próprio proxy.\r\n            get(target,prop,receiver){\r\n                \r\n                //ele verifica se dentro do vetor tem um prop, o includes, esta sendo isso\r\n                //quando chamado o get ele ira olhar se é um metodo ou uma funcao\r\n                //se for uma funcao ele\r\n                //ele cria uma nova função temporada no proxy\r\n                // e o arguments esta pegando todos os paramentros da chamada que esta fazendo para //cair nesse if\r\n                //nesse caso a linha abaixo lista.adiciona()\r\n                //então o arguments passa esse os parametros para nova função criada \r\n                //se for um metodo ele retorna o get normal\r\n                if(props.includes(prop) && ProxyFactory._ehFuncao(target[prop])){\r\n\r\n                    return function(){\r\n\r\n                        console.log(`interceptando ${prop}`);\r\n                        Reflect.apply(target[prop],target,arguments);\r\n                        return acao(target);\r\n                    }\r\n                }\r\n                \r\n                return Reflect.get(target,prop,receiver);\r\n            },\r\n\r\n            set(target, prop, value, receiver){\r\n\r\n                if(props.includes(prop)) {\r\n                    target[prop] = value;\r\n                    acao(target);\r\n                }\r\n                return Reflect.set(target,prop,value,receiver);  \r\n            }\r\n        });\r\n    }\r\n\r\n    static _ehFuncao(func){\r\n\r\n        return typeof(func) == typeof(Function);\r\n    }\r\n}"]}