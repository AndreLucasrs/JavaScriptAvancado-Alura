{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["stores","version","dbName","connection","close","ConnectionFactory","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","_createStores","e","target","result","onsuccess","bind","onerror","console","log","error","name","forEach","objectStoreNames","contains","store","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAMA,S,GAAS,CAAC,aAAD,C;AACTC,U,GAAU,C;AACVC,S,GAAS,Y;AAEXC,a,GAAa,I;AAEbC,Q,GAAQ,I;;gCAECC,iB;AAEZ,iCAAa;AAAA;;AAEZ,WAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;AACA;;;;qCAEqB;;AAErB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAmB;;AAErC,WAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBX,MAAtB,EAA8BD,OAA9B,CAAlB;;AAEAS,mBAAYI,eAAZ,GAA8B,aAAK;;AAElCT,0BAAkBU,aAAlB,CAAgCC,EAAEC,MAAF,CAASC,MAAzC;AACA,QAHD;;AAKAR,mBAAYS,SAAZ,GAAwB,aAAI;;AAE3B,YAAG,CAAChB,UAAJ,EAAe;AACdA,sBAAaa,EAAEC,MAAF,CAASC,MAAtB;AACAd,iBAAQD,WAAWC,KAAX,CAAiBgB,IAAjB,CAAsBjB,UAAtB,CAAR;AACA;AACAA,oBAAWC,KAAX,GAAmB,YAAW;AAC7B,gBAAM,IAAIE,KAAJ,CAAU,4CAAV,CAAN;AACA,UAFD;AAGA;AACDE,gBAAQL,UAAR;AACA,QAXD;;AAaAO,mBAAYW,OAAZ,GAAsB,aAAI;;AAEzBC,gBAAQC,GAAR,CAAYP,EAAEC,MAAF,CAASO,KAArB;;AAEAf,eAAOO,EAAEC,MAAF,CAASO,KAAT,CAAeC,IAAtB;AACA,QALD;AAMA,OA5BM,CAAP;AA6BA;;;mCAEoBtB,U,EAAW;;AAE/BH,aAAO0B,OAAP,CAAe,iBAAS;AACvB,WAAGvB,WAAWwB,gBAAX,CAA4BC,QAA5B,CAAqCC,KAArC,CAAH,EAA+C;AAC9C1B,mBAAW2B,iBAAX,CAA6BD,KAA7B;AACA;AACD1B,kBAAW4B,iBAAX,CAA6BF,KAA7B,EAAmC,EAACG,eAAc,IAAf,EAAnC;AACA,OALD;AAMA;;;uCAEuB;;AAEvB,UAAG7B,UAAH,EAAc;AACZC;AACAD,oBAAa,IAAb;AACD;AACD","file":"ConnectionFactory.js","sourcesContent":["const stores = ['negociacoes'];\r\nconst version = 7;\r\nconst dbName = 'aluraframe';\r\n\r\nlet connection = null;\r\n\r\nlet close = null;\r\n\r\nexport class ConnectionFactory{\r\n\r\n\tconstructor(){\r\n\r\n\t\tthrow new Error(\"Não é possível criar instâncias de ConnectionFactory\");\r\n\t}\r\n\r\n\tstatic getConnection(){\r\n\r\n\t\treturn new Promise((resolve,reject) =>{\r\n\r\n\t\t\tlet openRequest = window.indexedDB.open(dbName, version);\r\n\r\n\t\t\topenRequest.onupgradeneeded = e => {\r\n\r\n\t\t\t\tConnectionFactory._createStores(e.target.result);\t\t\t\t\r\n\t\t\t};\r\n\r\n\t\t\topenRequest.onsuccess = e =>{\r\n\r\n\t\t\t\tif(!connection){\r\n\t\t\t\t\tconnection = e.target.result;\r\n\t\t\t\t\tclose = connection.close.bind(connection);\r\n\t\t\t\t\t//O desenvolvedor não poderá obter uma conexão e a partir desta, fechar, porque assim pode ocorrer um problema geral na aplicação. Para isto, vamos utilizar o Monkey Patch, que consiste forçarmos a modificação de uma API. No caso, nós iremos alterar o método close()\r\n\t\t\t\t\tconnection.close = function() {\r\n\t\t\t\t\t\tthrow new Error('Você não pode fechar diretamente a conexão');\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tresolve(connection);\r\n\t\t\t};\r\n\r\n\t\t\topenRequest.onerror = e =>{\r\n\r\n\t\t\t\tconsole.log(e.target.error);\r\n\r\n\t\t\t\treject(e.target.error.name);\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tstatic _createStores(connection){\r\n\r\n\t\tstores.forEach(store => {\r\n\t\t\tif(connection.objectStoreNames.contains(store)){\r\n\t\t\t\tconnection.deleteObjectStore(store);\r\n\t\t\t}\r\n\t\t\tconnection.createObjectStore(store,{autoIncrement:true})\r\n\t\t});\r\n\t}\r\n\r\n\tstatic closeConnection(){\r\n\t\t \r\n\t\tif(connection){\r\n\t\t \tclose();\r\n\t\t \tconnection = null;\r\n\t\t}\r\n\t}\r\n}"]}