{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","Mensagem","NegociacoesView","MensagemView","NegociacaoService","DateHelper","Bind","Negociacao","NegociacaoController","_ordemAtual","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_service","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","importa","coluna","inverteOrdem","ordena","a","b","apaga","esvazia","textoParaData","value","parseInt","parseFloat","focus","negociacaoController","currentInstance"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import {ListaNegociacoes} from '../models/ListaNegociacoes';\r\nimport {Mensagem} from '../models/Mensagem';\r\nimport {NegociacoesView} from '../view/NegociacoesView';\r\nimport {MensagemView} from '../view/MensagemView';\r\nimport {NegociacaoService} from '../services/NegociacaoService';\r\nimport {DateHelper} from '../helpers/DateHelper';\r\nimport {Bind} from '../helpers/Bind';\r\nimport {Negociacao} from '../models/Negociacao';\r\n\r\nclass NegociacaoController{\r\n\r\n\t//OBS para fazer o botão importar negociações funcionar, tem que rodar o server\r\n\t//entre na pasta serve e de um npm start\r\n\t//agora bastra abrir o http://localhost:3000\r\n\tconstructor(){\r\n\t\tthis._ordemAtual = '';\r\n\t\t//Se declaramos as variáveis usando o let, estas ganharam um escopo de bloco\t\r\n\t\t//estamos informando que o querySelector irá para a variável $, mas ainda manterá uma associação com document\r\n\t\tlet $ = document.querySelector.bind(document);\r\n        this._inputData = $('#data');\r\n        this._inputQuantidade =  $('#quantidade');\r\n        this._inputValor = $('#valor');\r\n        //this tem contexto dinamico, ira variar de acordo com o que esta chamando\r\n        //essa função abaixo tem escopo dinamico logo o this acontece o que ta escrito acima\r\n        //para esse this funciona de acordo com o contexto de NegociacaoController\r\n        //eu adicionei este parametro antes this, para mostrar qual é o contexto\r\n        //this._listaNegociacoes = new ListaNegociacoes(this, function(model) {\r\n\t\t//mas tem como resolver com arrow function\r\n\t\t// Isto ocorre porque a arrow function não é apenas uma maneira sucinta de escrever uma função,\r\n\t\t//ela também tem um característica peculiar: o escopo de this é léxico,\r\n\t\t//em vez de ser dinâmico como a outra função. \r\n\t\t//Isto significa que o this não mudará de acordo com o contexto\r\n        //this._listaNegociacoes = new ListaNegociacoes((model) =>\r\n        // \tthis._negociacoesView.update(model));\r\n\r\n        this._listaNegociacoes = new Bind(new ListaNegociacoes(),\r\n        \tnew NegociacoesView($(\"#negociacoesView\")),'adiciona','esvazia','ordena','inverteOrdem');\r\n\r\n        this._mensagem = new Bind(new Mensagem(),\r\n        \tnew MensagemView($(\"#mensagemView\")),'texto');\r\n\r\n        this._service = new NegociacaoService();\r\n\r\n        this._init();\r\n\r\n    }\r\n\r\n    _init(){\r\n        \r\n        this._service\r\n            .lista()\r\n            .then(negociacoes =>\r\n                negociacoes.forEach(negociacao =>\r\n                    this._listaNegociacoes.adiciona(negociacao)))\r\n            .catch(erro => this._mensagem.texto = erro);\r\n\r\n        setInterval(() => {\r\n            this.importaNegociacoes();\r\n        }, 3000);        \r\n    }\r\n\r\n\tadiciona(event){\r\n\r\n\t\t//isso cancela a atualização da pagina na hora de submeter\r\n\t\tevent.preventDefault();\r\n\r\n        let negociacao = this._criaNegociacao();\r\n\r\n       this._service\r\n            .cadastra(negociacao)\r\n            .then(mensagem => {\r\n\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = mensagem;\r\n                this._limpaFormulario();\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro);\r\n\r\n\t}\r\n\r\n\timportaNegociacoes() {\r\n\r\n        this._service\r\n            .importa(this._listaNegociacoes.negociacoes)\r\n            .then(negociacoes => negociacoes.forEach(negociacao => {\r\n\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = 'Negociações do período importadas';\r\n            }))\r\n            .catch(erro => this._mensagem.texto = erro);\r\n    }\r\n\r\n    ordena(coluna) {\r\n        if(this._ordemAtual == coluna) {\r\n            this._listaNegociacoes.inverteOrdem();\r\n        } else {\r\n            this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);    \r\n        }\r\n        this._ordemAtual = coluna;\r\n    }\r\n\r\n\tapaga(){\r\n\r\n        this._service\r\n            .apaga()\r\n            .then(mensagem =>{\r\n                this._mensagem.texto = mensagem;\r\n                this._listaNegociacoes.esvazia();\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro);\r\n\r\n\t}\r\n\r\n\t_criaNegociacao(){\r\n\t\treturn new Negociacao(\r\n            DateHelper.textoParaData(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value));\r\n\t}\r\n\r\n\t//o uso do underline _ ,que dizer que esse metodo so pode ser chamado pela propria classe,\r\n\t//nesse caso NegociacaoController\r\n\t_limpaFormulario(){\r\n\r\n\t\tthis._inputData.value = '';\r\n\t\tthis._inputQuantidade.value = 1;\r\n\t\tthis._inputValor.value = 0.0;\r\n\r\n\t\tthis._inputData.focus();\r\n\t}\r\n}\r\n\r\nlet negociacaoController = new NegociacaoController();\r\nexport function currentInstance(){\r\n\r\n    return negociacaoController;\r\n}\r\n\r\n/*\r\nNós programaremos com o ES6 e depois, vamos compilar o código para o ES5. \r\nEste processo de downgrade recebe o nome de transcompilação e é feito com o uso de um transpiler \r\n(transcompilador). Com isto, o código da Controller consegue ter o mesmo resultado no ES 5. \r\nDesta forma, conseguimos aumentar a quantidade de navegadores que suportarão o nosso código, e assim,\r\ncom a sua compatibilidade.\r\n\r\nEncontramos vários transpilers no mercado: \r\nBabel, o TypeScript (que também atua como transcompilador). \r\nNo nosso caso, focaremos no Babel, por ser open source.\r\n\r\nO código-fonte estará escrito com o ES 6, \r\nmas o resultado da transcompilação ficará na pasta app. \r\nE será desta que iremos importar os arquivos do index.html. \r\nPorém, se tentarmos recarregar a página do formulário agora, \r\nela não funcionará porque nenhum scriptserá encontrado. \r\nVeremos como fazer a transcompilação.\r\n\r\n*/\r\n\r\n/*\r\n\r\nOBS\r\n\r\nATENÇÃO: o projeto não possui a pasta aluraframe/client/node_modules e você precisará baixar as dependências abrindo o terminal na pasta aluraframe/client para em seguida executar o comando npm install. Este comando lerá seu arquivo package.json e baixará todas dependências listadas nele. Vá tomar um café enquanto as dependências são baixadas.\r\n\r\nATENÇÃO 2: se você fez testes e foi incrementando a versão do seu banco, será necessário usar um número igual ou superior à versão do banco criado em seu navegador. Para isso, altere aluraframe/client/js/app/services/ConnectionFactory.js para que a variável version utilize a versão correta.\r\n\r\n*/"]}